"""
Test the performance of Gibbs sampling for recovering the GDSC dataset, where we 
vary the fraction of entries that are missing.
We repeat this 10 times per fraction and average that.

GDSC has 0.7356934001670844 missing entries
"""

project_location = "/home/tab43/Documents/Projects/libraries/"
import sys
sys.path.append(project_location)

from HMF.code.models.bnmf_gibbs import bnmf_gibbs
from HMF.code.generate_mask.mask import try_generate_M_from_M
from HMF.drug_sensitivity.load_dataset import load_data_without_empty

import numpy, matplotlib.pyplot as plt, random

''' Settings '''
fractions_unknown = [0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9]
repeats = 10
iterations, burn_in, thinning = 200, 180, 2

init_UV = 'random'
K = 4

alpha, beta = 1., 1.
lambdaU = 1.
lambdaV = 1.
priors = { 'alpha':alpha, 'beta':beta, 'lambdaU':lambdaU, 'lambdaV':lambdaV }

metrics = ['MSE', 'R^2', 'Rp']

''' Load data '''
location = project_location+"DI_MMTF/data/datasets_drug_sensitivity/overlap/"
location_data = location+"data_row_01/"
R, M_original, _, _ = load_data_without_empty(location_data+"gdsc_ic50_row_01.txt")

''' Seed all of the methods the same '''
numpy.random.seed(0)
random.seed(0)

''' Generate matrices M - one list of (M_train,M_test)'s for each fraction '''
M_attempts = 1000
all_Ms_train_test = [ 
    [try_generate_M_from_M(M=M_original,fraction=fraction,attempts=M_attempts) for r in range(0,repeats)]
    for fraction in fractions_unknown
]

''' Make sure each M has no empty rows or columns '''
def check_empty_rows_columns(M,fraction):
    sums_columns = M.sum(axis=0)
    sums_rows = M.sum(axis=1)
    for i,c in enumerate(sums_rows):
        assert c != 0, "Fully unobserved row in M, row %s. Fraction %s." % (i,fraction)
    for j,c in enumerate(sums_columns):
        assert c != 0, "Fully unobserved column in M, column %s. Fraction %s." % (j,fraction)
        
for Ms_train_test,fraction in zip(all_Ms_train_test,fractions_unknown):
    for (M_train,M_test) in Ms_train_test:
        check_empty_rows_columns(M_train,fraction)

''' Run the method on each of the M's for each fraction '''
all_performances = {metric:[] for metric in metrics} 
average_performances = {metric:[] for metric in metrics} # averaged over repeats
for (fraction,Ms_train_test) in zip(fractions_unknown,all_Ms_train_test):
    print "Trying fraction %s." % fraction
    
    # Run the algorithm <repeats> times and store all the performances
    for metric in metrics:
        all_performances[metric].append([])
    for repeat,(M_train,M_test) in zip(range(0,repeats),Ms_train_test):
        print "Repeat %s of fraction %s." % (repeat+1, fraction)
    
        BNMF = bnmf_gibbs(R,M_train,K,priors)
        BNMF.initialise(init_UV)
        BNMF.run(iterations)
    
        # Measure the performances
        performances = BNMF.predict(M_test,burn_in,thinning)
        for metric in metrics:
            # Add this metric's performance to the list of <repeat> performances for this fraction
            all_performances[metric][-1].append(performances[metric])
            
    # Compute the average across attempts
    for metric in metrics:
        average_performances[metric].append(sum(all_performances[metric][-1])/repeats)
    
 
print "repeats=%s \nfractions_unknown = %s \nall_performances = %s \naverage_performances = %s" % \
    (repeats,fractions_unknown,all_performances,average_performances)

'''
200 iterations
repeats=10 
fractions_unknown = [0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9] 
all_performances = {'R^2': [[0.5846345522300793, 0.5942845369204632, 0.5967828084841125, 0.575695253016793, 0.544815805245646, 0.6198404010787207, 0.5756607200910788, 0.5554006218554062, 0.5968725914028101, 0.6177972382789085], [0.5848045488077691, 0.5528571632595023, 0.5791212963665022, 0.5832191421562236, 0.583993343354057, 0.5689999266090211, 0.5871910437005814, 0.6207451989438963, 0.5950782498168863, 0.6187414847726322], [0.5953312125837116, 0.5939134205718626, 0.5823924111133445, 0.6032876828049853, 0.5883807060448685, 0.5678237341118515, 0.5954472016308366, 0.57077148779742, 0.5901596061768271, 0.5503170086487094], [0.5648838074552875, 0.5833633437389492, 0.5754860322906525, 0.569870169026388, 0.5689639519895772, 0.57700720913542, 0.5523546378582265, 0.5649454371445362, 0.5823217661149727, 0.5813343998072851], [0.5791535127955474, 0.5587723098629243, 0.5514246094828226, 0.5765186685736767, 0.5658519543990794, 0.5549905823589746, 0.5645006240818444, 0.5769584649696412, 0.5985086556816717, 0.5773754986749559], [0.5704486714303144, 0.5665484630956028, 0.5518884579463543, 0.5671689104588351, 0.5680230128345231, 0.5651978275856776, 0.5539240299017227, 0.5540543414163626, 0.5597465571434659, 0.5629678489377115], [0.555812595652813, 0.5361015272889333, 0.562052743569791, 0.5346868192974649, 0.5508481980926457, 0.5431242969272196, 0.5618237326004156, 0.5514326555148268, 0.5306195645348329, 0.5506720422538041], [0.5276748350983613, 0.5416412852686505, 0.5363537643592209, 0.544598726698976, 0.5337493315875541, 0.5412648077252527, 0.5351989118763438, 0.5368353410029902, 0.5333529945704704, 0.5358146339158685], [0.5253806042705447, 0.5106966545691362, 0.5138607719592024, 0.5156148497105983, 0.5115145656961946, 0.513067334430612, 0.5096015186048631, 0.5356057678016655, 0.5226983654401478, 0.5294301943848521], [0.5103497314192051, 0.521498377234753, 0.5107484151968089, 0.4878350191601686, 0.502061174491781, 0.49310443997340014, 0.4947357919974972, 0.5035924525128428, 0.502164156821484, 0.5180257579408031], [0.4836674773477043, 0.45017660915627555, 0.48354408326392806, 0.4545770241509475, 0.4498748129668815, 0.48286147496938836, 0.47773527508332925, 0.456063643289931, 0.4622365291651098, 0.45502561128619134], [0.43968734830350564, 0.4243162689639731, 0.4318276162775032, 0.4508208048899912, 0.4215516035776887, 0.42918908440280157, 0.4199568628085425, 0.43392453902126593, 0.42111199358927864, 0.4440182816481033], [0.38335516212462817, 0.36213864310641763, 0.362736189461766, 0.40995498394197816, 0.3474867051109478, 0.36392903749187233, 0.36728373475700216, 0.4037044985496594, 0.40361886568035077, 0.3854475647439505]], 'MSE': [[0.081364981348119605, 0.078522116323120658, 0.080209148868228913, 0.084121837103334721, 0.090009299687818359, 0.078007565014955815, 0.084649955297776566, 0.088975926987693604, 0.08039609894165374, 0.074438665045198305], [0.082346570379071213, 0.089912361369804891, 0.084149746543125584, 0.083787146826903053, 0.083323948310340124, 0.085570085884178124, 0.08227642893830095, 0.075368132680844274, 0.081048517126663763, 0.075729809202614073], [0.080385129022992302, 0.082516784470227242, 0.083029373506517484, 0.07875045832554721, 0.082146816262046063, 0.087589312498961985, 0.080827306460122025, 0.085678841146367854, 0.081808937856939809, 0.088858999821109105], [0.087278930116607936, 0.08292627053580591, 0.083901465090280292, 0.086125263505348687, 0.085346529691370951, 0.084010813964591466, 0.08883060670758347, 0.086878846081613267, 0.082896157837946891, 0.083005955639420273], [0.084295817645639232, 0.088312891921503031, 0.08956186765557117, 0.08476496453803041, 0.086492077705349946, 0.088248897761123074, 0.086598136653238733, 0.084566539277739966, 0.079746429145574713, 0.084390533995412798], [0.085543606843626677, 0.086390243926929275, 0.089511681938478596, 0.086772143966176274, 0.086074051601854523, 0.087230057994447552, 0.088315468524597721, 0.089091795632983029, 0.087882437109603653, 0.08667794924923114], [0.08871454164542264, 0.092180941830780655, 0.087111916690036553, 0.092529581739133948, 0.089395762595519804, 0.091501380972042773, 0.087428437264423231, 0.08921739442237106, 0.093997163557297717, 0.089307379967819081], [0.094212982815813029, 0.091739514472933853, 0.092366177416828801, 0.091233957597764176, 0.09285806583390209, 0.091510797247703696, 0.092543777469299121, 0.092790014936696863, 0.093393572687923782, 0.092750184515271672], [0.09445498612493744, 0.098304982988951489, 0.096992789883146829, 0.096985512011493955, 0.097488056885255428, 0.097078077295639109, 0.097346924376941757, 0.092819519999972691, 0.095596950936268521, 0.093561121032465611], [0.09804106992087408, 0.095571050968612403, 0.097355052581156606, 0.1021609657584665, 0.099095277621566794, 0.10033583004854234, 0.10070913192735588, 0.099111400410233863, 0.09943950491597349, 0.095956166629022968], [0.10287884759412361, 0.10956609685643583, 0.10294888780218728, 0.10885098115578558, 0.10960805512113191, 0.10289235396429897, 0.1044097813048164, 0.10839176868708639, 0.10726578674018998, 0.10899584833837676], [0.11192214943398809, 0.11503487895464549, 0.1129759057437926, 0.1093841685093087, 0.1151456997337225, 0.11378414284598436, 0.11577606543740233, 0.1130243808798623, 0.11552054559473154, 0.11100808426430875], [0.12296158690757167, 0.1270295352081294, 0.12690838785745831, 0.11753035483865457, 0.13017913425278108, 0.12694289342867984, 0.12629991572740565, 0.11896182980942632, 0.11897509076280822, 0.12242902234515163]], 'Rp': [[0.76476437931452734, 0.77097947475549422, 0.77263661675526341, 0.75908460441375536, 0.7421714401152234, 0.78755075185068701, 0.7605384231262089, 0.7461119425562226, 0.77474140091897714, 0.78621451407986276], [0.76496255134698599, 0.74420764816633478, 0.76131677234053963, 0.76380128224902355, 0.76426174628415744, 0.7556994345867577, 0.76639633218401593, 0.78865527620937936, 0.77143394466927673, 0.78662050667044392], [0.77233112680802507, 0.7707939510570474, 0.76468390400146269, 0.77718179037570234, 0.76715349425863399, 0.75411044605894317, 0.77171666337323364, 0.75587731024967875, 0.76888050874970804, 0.74324358730657802], [0.75230449803589317, 0.76425019917535875, 0.7594680210134408, 0.75570678865923102, 0.75527548601961347, 0.75988084364100184, 0.7442198776468929, 0.75341591940905905, 0.76334799776923135, 0.76269501022598274], [0.76171770700445796, 0.74879581600480483, 0.74341203322836136, 0.75940853513227213, 0.75320960765003686, 0.74570297278325792, 0.75215936831619712, 0.7601773437606878, 0.77388253686256714, 0.76005918915146531], [0.75551271489481331, 0.75361039296696064, 0.7437329419354054, 0.75342423909068912, 0.75446057801780619, 0.75322803146405404, 0.74515455383659635, 0.74504890651010969, 0.75027193650000035, 0.7507942025164962], [0.74612492060178348, 0.73350302710297854, 0.75069517301240862, 0.73258960440385146, 0.74448268944866969, 0.73723754875991943, 0.75022124103878485, 0.74370803750386516, 0.73066250236026364, 0.74321665504306356], [0.72822868567007237, 0.73758556570105238, 0.73378159290564415, 0.73879602404029809, 0.73223626717491097, 0.73720372979240423, 0.73397396721057617, 0.73348960376861094, 0.73180409826496551, 0.7338948367804532], [0.73021951586101563, 0.71766049752279482, 0.7185353986360915, 0.72074323656237282, 0.71874308078915172, 0.7184598417474376, 0.71805779214177101, 0.73269551744302552, 0.72542842876752545, 0.72892718473810247], [0.71603617016968724, 0.72405592711795164, 0.71677295008700226, 0.70693145150066261, 0.71285759473431853, 0.70812982640779054, 0.7079887403195031, 0.7123777123674917, 0.71302446994431068, 0.72212097597834235], [0.70006376536728032, 0.67929161181227804, 0.70134848737315902, 0.6867790467151057, 0.68000023635116735, 0.70033058133606152, 0.69511972739435035, 0.6837599587549702, 0.6863299436080843, 0.68087626819734204], [0.67711051836399105, 0.66607613447126224, 0.67304473478184801, 0.67976118624770521, 0.66460142294545643, 0.67065974529707173, 0.66083810307959445, 0.66846106566106356, 0.66240057682203846, 0.67501117637551544], [0.65306995219664954, 0.63182597878439306, 0.63657096549245984, 0.65771020223449794, 0.62913174895304957, 0.63272481876287112, 0.63712119751600371, 0.65082171760271357, 0.6516713055838691, 0.64915606869247233]]} 
average_performances = {'R^2': [0.5861784528604019, 0.5874751397787072, 0.5837824471484417, 0.5720530754561295, 0.5704054880881138, 0.561996812075057, 0.5477174175732745, 0.5366484632103689, 0.5187470626867816, 0.5044115316748744, 0.4655762540679687, 0.4316404403482654, 0.37896553849685727], 'MSE': [0.082069559461790037, 0.082351274726184601, 0.083159195937083097, 0.085120083917056916, 0.085697815629918295, 0.08734894367879284, 0.090138450068484754, 0.092539904499413711, 0.096062892153507301, 0.098777545078180484, 0.10658084075644325, 0.11335760213977468, 0.12382177511380665], 'Rp': [0.76647935478862217, 0.76673554947069156, 0.76459727822390133, 0.75705646415957051, 0.75585251098941086, 0.75052384977329312, 0.74124413992755889, 0.73409943713089876, 0.72294704942092891, 0.71402958186270604, 0.68938996269097974, 0.6697964664045547, 0.64298039558189801]}
'''