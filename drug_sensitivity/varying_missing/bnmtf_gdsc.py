"""
Test the performance of Gibbs sampling for recovering the GDSC dataset, where we 
vary the fraction of entries that are missing.
We repeat this 10 times per fraction and average that.

GDSC has 0.7356934001670844 observed entries
"""

project_location = "/home/tab43/Documents/Projects/libraries/"
import sys
sys.path.append(project_location)

from HMF.code.models.bnmtf_gibbs import bnmtf_gibbs
from HMF.code.generate_mask.mask import try_generate_M_from_M
from HMF.drug_sensitivity.load_dataset import load_data_without_empty

import numpy, matplotlib.pyplot as plt, random

''' Settings '''
fractions_unknown = [0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9]
repeats = 10
iterations, burn_in, thinning = 200, 180, 2

init_S = 'random'
init_FG = 'kmeans'
K, L = 7,7

alpha, beta = 1., 1.
lambdaF = 1.
lambdaS = 1.
lambdaG = 1.
priors = { 'alpha':alpha, 'beta':beta, 'lambdaF':lambdaF, 'lambdaS':lambdaS, 'lambdaG':lambdaG }

metrics = ['MSE', 'R^2', 'Rp']

''' Load data '''
location = project_location+"DI_MMTF/data/datasets_drug_sensitivity/overlap/"
location_data = location+"data_row_01/"
R, M_original, _, _ = load_data_without_empty(location_data+"gdsc_ic50_row_01.txt")

''' Seed all of the methods the same '''
numpy.random.seed(0)
random.seed(0)

''' Generate matrices M - one list of (M_train,M_test)'s for each fraction '''
M_attempts = 1000
all_Ms_train_test = [ 
    [try_generate_M_from_M(M=M_original,fraction=fraction,attempts=M_attempts) for r in range(0,repeats)]
    for fraction in fractions_unknown
]

''' Make sure each M has no empty rows or columns '''
def check_empty_rows_columns(M,fraction):
    sums_columns = M.sum(axis=0)
    sums_rows = M.sum(axis=1)
    for i,c in enumerate(sums_rows):
        assert c != 0, "Fully unobserved row in M, row %s. Fraction %s." % (i,fraction)
    for j,c in enumerate(sums_columns):
        assert c != 0, "Fully unobserved column in M, column %s. Fraction %s." % (j,fraction)
        
for Ms_train_test,fraction in zip(all_Ms_train_test,fractions_unknown):
    for (M_train,M_test) in Ms_train_test:
        check_empty_rows_columns(M_train,fraction)

''' Run the method on each of the M's for each fraction '''
all_performances = {metric:[] for metric in metrics} 
average_performances = {metric:[] for metric in metrics} # averaged over repeats
for (fraction,Ms_train_test) in zip(fractions_unknown,all_Ms_train_test):
    print "Trying fraction %s." % fraction
    
    # Run the algorithm <repeats> times and store all the performances
    for metric in metrics:
        all_performances[metric].append([])
    for repeat,(M_train,M_test) in zip(range(0,repeats),Ms_train_test):
        print "Repeat %s of fraction %s." % (repeat+1, fraction)
    
        BNMTF = bnmtf_gibbs(R,M_train,K,L,priors)
        BNMTF.initialise(init_FG=init_FG,init_S=init_S)
        BNMTF.run(iterations)
    
        # Measure the performances
        performances = BNMTF.predict(M_test,burn_in,thinning)
        for metric in metrics:
            # Add this metric's performance to the list of <repeat> performances for this fraction
            all_performances[metric][-1].append(performances[metric])
            
    # Compute the average across attempts
    for metric in metrics:
        average_performances[metric].append(sum(all_performances[metric][-1])/repeats)
    
 
print "repeats=%s \nfractions_unknown = %s \nall_performances = %s \naverage_performances = %s" % \
    (repeats,fractions_unknown,all_performances,average_performances)

'''
200 iterations
repeats=10 
fractions_unknown = [0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9] 
all_performances = {'R^2': [[0.5941929599474387, 0.5968491052848404, 0.6106399966584322, 0.5747983319636255, 0.5569201486639157, 0.6080661505915745, 0.5660788382623474, 0.543287325070379, 0.5797668208719176, 0.6068486259434914], [0.5854150873567245, 0.5473538645539486, 0.5860857495459351, 0.5809250055909023, 0.583538936506822, 0.5671182607151077, 0.5928974813762868, 0.6100612533373422, 0.5920062566668283, 0.6154231900517017], [0.584426987583068, 0.6007306547456885, 0.5840749948347832, 0.6060098519262915, 0.5903258100679247, 0.5712475102433576, 0.5947353926389474, 0.5702207240438959, 0.5943648884675565, 0.5489544600772971], [0.5623650277470954, 0.5849070871787971, 0.5804924711174851, 0.5732629781164881, 0.578603128551517, 0.5787610098537443, 0.5569165734195822, 0.5733106425345196, 0.5872824789307423, 0.5790127020644471], [0.5841364713098784, 0.5625071342284721, 0.553414885900496, 0.5789165174394189, 0.5731507797660512, 0.556302254502138, 0.5751077406587155, 0.5816281033350199, 0.5968467946061626, 0.5795110715580771], [0.5791164622681151, 0.5702055831101803, 0.5561989288056723, 0.5677443893662977, 0.5682371781538549, 0.5763462915449601, 0.5648514179437465, 0.5552940932707378, 0.5711211870692408, 0.5642903260837506], [0.5600743545506364, 0.5531882003202768, 0.5707508378847957, 0.5450334261949854, 0.5526317038021961, 0.5547612246382561, 0.5674035439388387, 0.5516553926888992, 0.546266197179326, 0.5620688066302071], [0.5374947546511608, 0.5472602739400619, 0.544514115223371, 0.5592133260017639, 0.5454578297502141, 0.5603233356008892, 0.5365616005592324, 0.5528884464324122, 0.5509226613333051, 0.5529627836090476], [0.5332495218213473, 0.537312822063635, 0.5308552044036863, 0.5383632208944443, 0.539039104119168, 0.5434649358327914, 0.5242858140533704, 0.5482011544720105, 0.5410834425727185, 0.5559596533852306], [0.5310201375727599, 0.5391145317818341, 0.5362529507763594, 0.5255449871656166, 0.5184708235663289, 0.507319207737583, 0.5065748947322809, 0.5297866171158615, 0.5218270142007155, 0.5285019575594061], [0.5156442765541576, 0.49901073383771577, 0.5091546922445104, 0.49783560565235696, 0.5028484505684676, 0.5132254799405133, 0.5152478868972215, 0.5070112619323204, 0.515729813807532, 0.5126529638284281], [0.5124783202879708, 0.501225727361974, 0.4819650222593641, 0.498130277460641, 0.4908021400994358, 0.49502563542967537, 0.4810226828612414, 0.5023141072004862, 0.49998294123226794, 0.5010983459337773], [0.4857096319886841, 0.47611234976930217, 0.4858708348221581, 0.48312670336859953, 0.48841534632113137, 0.4795168869786578, 0.476013811327178, 0.4856878567658217, 0.490825844994085, 0.48134637581178863]], 'MSE': [[0.079492606864839346, 0.078025770105755177, 0.077452636267685976, 0.084299658933671431, 0.087615755520830604, 0.080423604523058898, 0.086561411311570038, 0.091400113487509871, 0.083807519725123764, 0.076571041280984325], [0.082225481009121873, 0.091018975501313132, 0.082757286043696074, 0.084248346408462502, 0.083414963615133911, 0.0859436689113936, 0.081139086090595211, 0.077491320120495408, 0.081663402568907556, 0.076388925828361459], [0.08255119065371247, 0.081131522628289876, 0.082694839661872133, 0.078210086734722267, 0.081758632070636453, 0.086895414612430208, 0.080969521774811329, 0.085788779789318745, 0.080969514308704568, 0.089128244390265593], [0.087784166193538918, 0.082619007878507483, 0.08291198633479277, 0.085445918442843272, 0.083437941598933557, 0.083662490709301568, 0.087925337630881201, 0.0852083443708683, 0.081911610405968519, 0.083466262719250686], [0.08329772790263093, 0.087565356923330201, 0.089164492148831584, 0.084285005779547215, 0.085037987154454764, 0.087988782769688176, 0.08448893378955119, 0.083633072647305434, 0.080076517174577894, 0.083964098387851765], [0.083817447378352616, 0.085661351621261678, 0.088650651903866881, 0.086656774391729183, 0.086031377854652258, 0.084993451971259265, 0.08615203121935841, 0.08884411586142428, 0.085611858161689161, 0.086415658233183437], [0.087863369407030698, 0.088785660954818726, 0.085381782167658238, 0.09047211324619038, 0.089040787167787669, 0.089170780004054678, 0.086315108629707898, 0.089173093314508317, 0.090863800986810878, 0.087042185583582621], [0.09225423917725796, 0.090614885932062031, 0.090740497409613902, 0.088306105149232456, 0.090526211818751076, 0.087708906506296314, 0.092272460638397877, 0.089573949410881246, 0.089877223218570543, 0.08932376445908749], [0.092888976592316055, 0.092957580570368431, 0.0936021204613144, 0.092430743093878179, 0.091994927348356278, 0.091017812895278605, 0.094432007115192104, 0.090302051728626542, 0.091914672918883111, 0.088286396868607467], [0.093902302181876826, 0.092052579297898729, 0.092279963445974902, 0.094639001363633679, 0.095829577805821117, 0.097522133036692979, 0.098349365016629137, 0.093881543713809371, 0.095511975731774001, 0.093870461899353816], [0.096507495591716563, 0.099834673050447312, 0.097843740150572608, 0.10021779324780293, 0.099053480404210331, 0.096850986330592345, 0.096910359251592582, 0.09823928958375025, 0.096595669534984566, 0.097470275196013312], [0.097382192109762761, 0.099666596405893579, 0.10300653902566025, 0.099961183505811152, 0.10136071643348232, 0.10066043528918109, 0.10358738510469066, 0.09936950774910866, 0.099781378774220122, 0.099611399127216158], [0.10255167301786651, 0.10433177051856955, 0.10238664494083358, 0.10295536833030379, 0.10206328029568754, 0.10387462443996022, 0.10459571708068126, 0.10260602923136587, 0.10157772910609153, 0.10332439105651946]], 'Rp': [[0.77098364527170316, 0.77270381234441532, 0.78144431662644653, 0.75850064237860004, 0.75032334428968694, 0.78010032436497845, 0.75399946431626097, 0.73813375574884565, 0.76380049571423614, 0.77945695492600831], [0.76548948478687462, 0.7402504787587898, 0.76603619334825035, 0.76228039945261727, 0.7639584803230145, 0.75411874600076678, 0.77009380114819559, 0.78224153616485115, 0.76948656223674838, 0.78452930498316353], [0.76516126871301304, 0.77526043970083947, 0.76531768174913162, 0.77877144576975499, 0.76872236853369247, 0.75623102463665126, 0.77140972580145839, 0.75544782122099752, 0.77219219796840588, 0.74233475022403828], [0.75024670658669734, 0.76527893130743474, 0.76275707448322505, 0.75814066074045394, 0.76093384221364613, 0.76097488518179002, 0.74689075479450295, 0.75870827078570824, 0.76641377712589587, 0.76118281886246431], [0.76492038016648556, 0.75070734999194699, 0.74441022103270083, 0.76089069911196028, 0.7579259006188579, 0.74630560117451639, 0.75846164616751066, 0.76293750629590606, 0.7729596881439974, 0.76139651499790295], [0.76122877013832846, 0.75563975656120452, 0.74601459717076768, 0.7535421313476689, 0.75451763599841559, 0.76002905597467341, 0.7523093614047951, 0.74537831380185804, 0.75776983067886072, 0.75140575686027955], [0.74863262493518068, 0.74419392651742322, 0.7558206804249783, 0.73891975329170689, 0.74470854169661593, 0.74487002733490515, 0.75338787336342272, 0.74314428227535279, 0.73992005453826126, 0.75007834758715486], [0.73336796285058115, 0.74006513175696731, 0.73823088304914075, 0.74796431258817264, 0.73905275881335841, 0.74974709735615508, 0.73308976311057827, 0.74366059901479609, 0.74249373388167961, 0.7445877677413858], [0.73245996146080805, 0.73321894140068189, 0.72879082311278875, 0.734254442766619, 0.73465772539407126, 0.73771384595342293, 0.72605102041892411, 0.74120136791494196, 0.73573732928075619, 0.74570983005180214], [0.72891658521309133, 0.73490391845968939, 0.73263239337125885, 0.72597732088028677, 0.72218445032472822, 0.7141828347088689, 0.7132261520509845, 0.72844360061386049, 0.72400013910688665, 0.72711022263458036], [0.71857933591613854, 0.70767278808980139, 0.71434287484692949, 0.70811754700214236, 0.70950338911936783, 0.7173928745414162, 0.71860226854198128, 0.71246953131685131, 0.7184403770470551, 0.71639754022127722], [0.71638834192477951, 0.70829503378686187, 0.69740019716259738, 0.70624291713075049, 0.70316287083305917, 0.70441687613303128, 0.69471567118152611, 0.70980131273825953, 0.70760100226464473, 0.70802099948480901], [0.69903226639966975, 0.69201108037973835, 0.69760963564088074, 0.69648939697131418, 0.69921080039451666, 0.69355475664661959, 0.69145838856496844, 0.69739307385914362, 0.70311582416355245, 0.69595202705071812]]} 
average_performances = {'R^2': [0.5837448303257962, 0.58608250857016, 0.5845091274628811, 0.5754914099514419, 0.574152175330443, 0.5673405857616557, 0.5563833687828418, 0.5487599127101459, 0.5391814873618402, 0.5244413122208746, 0.5088361165263223, 0.49640452001268337, 0.48326256421474073], 'MSE': [0.082565011802102947, 0.082629145609748073, 0.08300977466247636, 0.084437306628488626, 0.084950197467776906, 0.086283471859677718, 0.088410868146215016, 0.0901198243720151, 0.091982728959282112, 0.094783890349346464, 0.097952376234168276, 0.10043873335250268, 0.10302672280178793], 'Rp': [0.76494467559811807, 0.76584849872032712, 0.76508487243179812, 0.75915277220818178, 0.75809155077017853, 0.75378352099368517, 0.74636761119650008, 0.74122600101628155, 0.73497952877548167, 0.72515776173642355, 0.71415185266429604, 0.70560452226403192, 0.69658272500711227]}
'''